---

- name: Create the "/data" directory.
  ansible.builtin.file:
    path: /data
    state: directory
    mode: '0755'
  tags:
    - ebs_volume


# ansible_facts['device_links']['ids'].keys() that match with "$nvme[0-9]{1}n1$"
#FIXME: Remove hardcoded values.
- name:
  ansible.builtin.command:
    cmd: /usr/sbin/ebsnvme-id -b /dev/nvme1n1
  register: ebsnvme_id
  changed_when: false
  tags:
    - ebs_volume


- name: Assert
  ansible.builtin.assert:
    that:
      - ebsnvme_id.stdout == "/dev/sdf"
    fail_msg: "'ebsnvme_id' is not the one defined in the project configuration."
  tags:
    - ebs_volume


#FIXME: This should be always the second volume.
- name: Create a new ext4 primary partition in the data volume
  community.general.parted:
    device: /dev/nvme1n1
    number: 1
    state: present
    fs_type: ext4
  tags:
    - ebs_volume


- name: Mount data volume
  ansible.posix.mount:
    path: /data
    src:  /dev/nvme1n1
    fstype: ext4
    opts: rw,auto
    state: present
  tags:
    - ebs_volume

- name: Create "/data" child directories.
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /data
    - /data/prometheus
    - /data/postgresql
  tags:
    - ebs_volume


- name: Create and start services
  community.docker.docker_compose:
    project_name: frontend
    project_src: docker/backend
  register: docker_creation


- name: debug docker creation
  ansible.builtin.debug:
    var: docker_creation


